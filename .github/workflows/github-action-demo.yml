# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven


name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  compile:
    runs-on: macOs-latest
    name: Running Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Compile code
        run: mvn compile

  test:
    runs-on: macOs-latest
    name: Running tests
    needs: compile
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run unit tests
        run: mvn test

  build:
    runs-on: macOs-latest
    name: Run mvn build and generate coverage report
    needs: compile
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn -B package --file pom.xml -Dmaven.test.skip=true
      - name: generate report codecov
        run: mvn cobertura:cobertura
      - name: Upload coverage
        if: success()
        run: |
          curl -s https://codecov.io/bash | bash
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        shell: bash


  artifact:
    name: Publish - GitHub Packages
    runs-on: macOs-latest
    needs: [compile,test,build]

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Publish artifact on GitHub Packages
        run: mvn -B clean deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN}}


#  deploy:
#    runs-on: ubuntu-latest
#    name: Deploy the JAR file to the remote server
#    needs: build
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Generate the package
#        run: mvn -B package --file pom.xml -Dmaven.test.skip=true
#      - name: Deploy the package to the remote server
#        uses: garygrossgarten/github-action-scp@release
#        with:
#          local: target/demo-0.0.1-SNAPSHOT.jar
#          remote: github-jar/demo-0.0.1-SNAPSHOT.jar # My remote directory
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.SSH_USER }}
#          password: ${{ secrets.SSH_PASSWORD }}
#      - name: Run a script on remote server (start the application)
#        if: always()
#        uses: fifsky/ssh-action@master
#        with:
#          command: |
#            cd github-jar/ && java -jar workflow-github-actions.jar &
#          host: ${{ secrets.HOST }}
#          user: ${{ secrets.SSH_USER }}
#          pass: ${{ secrets.SSH_PASSWORD }}
#          args: "-tt"
#          # The & in the command runs the process on background

